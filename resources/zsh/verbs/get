# --------------------------------------------------------------------------
#   ZSH → Verbs → Get
#   @see https://bit.ly/2AD7bYb
# --------------------------------------------------------------------------

# Return all the names (CNs and SANs) listed in the SSL certificate for a given domain.
# @usage get-certificate-names github.com
# @returns Common Name: github.com \n Subject Alternative Name(s): github.com www.github.com
function get-certificate-names {
	if [ -z "${1}" ]; then
		echo "ERROR: No domain specified.";
		return 1;
	fi;

	local domain="${1}";
	echo "Testing ${domain}…";
	echo ""; # newline

	local tmp=$(echo -e "GET / HTTP/1.0\nEOT" \
		| openssl s_client -connect "${domain}:443" -servername "${domain}" 2>&1);

	if [[ "${tmp}" = *"-----BEGIN CERTIFICATE-----"* ]]; then
		local certText=$(echo "${tmp}" \
			| openssl x509 -text -certopt "no_aux, no_header, no_issuer, no_pubkey, \
			no_serial, no_sigdump, no_signame, no_validity, no_version");
		echo "Common Name:";
		echo ""; # newline
		echo "${certText}" | grep "Subject:" | sed -e "s/^.*CN=//" | sed -e "s/\/emailAddress=.*//";
		echo ""; # newline
		echo "Subject Alternative Name(s):";
		echo ""; # newline
		echo "${certText}" | grep -A 1 "Subject Alternative Name:" \
			| sed -e "2s/DNS://g" -e "s/ //g" | tr "," "\n" | tail -n +2;
		return 0;
	else
		echo "ERROR: Certificate not found.";
		return 1;
	fi;
}

# Returns which program(s) are hogging CPU.
# @usage get-cpu-hogs
alias get-cpu-hogs='ps wwaxr -o pid,stat,%cpu,time,command | head -10';

# Searches current directory and sub-directories for the string provided.
# @usage get-directory-location bin
# @returns ./config/shell/bin
function get-directory-location {
	find . -type d -name $@;
}

# Returns a list of all directories that contain the file name provided.
# @usage get-file-location convert-audio
# @returns ./config/shell/bin/convert-audio
function get-file-location {
	find . -name $1 | xargs -n1 dirname
}

# Returns the current public IP address.
# @usage get-ip
# @returns 12.34.567.89
alias get-ip="dig +short myip.opendns.com @resolver1.opendns.com"

# Returns a list of which program(s) are hogging memory.
# @usage get-memory-hogs
# @returns list of straight-up H A W G S
alias get-memory-hogs='top -l 1 -o rsize | head -20';

# Returns active network interfaces.
# @usage get-network-interfaces
alias get-network-interfaces="ifconfig | pcregrep -M -o '^[^\t:]+:([^\n]|\n\t)*status: active'"

# Returns the PID(s) for the program provided.
# @usage get-pid mariadb
# @returns 1234
function get-pid {
	lsof -t -c "$@";
}

# Returns a randomized string of character (30 characters long by default).
# @usage get-random-string 12
# @returns 6djKOXfbR6NF80X4
function get-random-string {
  NUM=30;
  TYPE=base64

  # Check if parameter one was passed and is a valid number.
  if ! [[ -z $1 ]]; then
    NUM_REGEX='^[0-9]+$'
    if [[ $1 =~ $NUM_REGEX ]] ; then
      NUM=$1;
    fi
  fi

  # Check if parameter two was passed and is a valid option.
  if ! [[ -z $2 ]]; then
    if [ $2 = 'hex' ] || [ $2 = 'base64' ]; then
      TYPE=$2;
    fi
  fi

  echo $(openssl rand -$TYPE $NUM);
}

# Determine size of a file or total size of a directory
# @usage get-size
# @returns 4.0K	.env
function get-size {
	if du -b /dev/null > /dev/null 2>&1; then
		local arg=-sbh;
	else
		local arg=-sh;
	fi
	if [[ -n "$@" ]]; then
		du $arg -- "$@";
	else
		du $arg .[^.]* ./*;
	fi;
}

# Returns number of the current week.
# @usage get-week
# @returns 30
alias get-week='date +%V'