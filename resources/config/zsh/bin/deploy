#!/bin/bash
# ====================================================== #
#     DEPLOY                                             #
# ====================================================== #


#   Set variables
# ------------------------------------------------------------
ROOT=$PWD;
source $ROOT/src/config/runner/editor-config;
source $ROOT/dist/.env-srvrs;



#   Methods
# ------------------------------------------------------------

#  help
#  Provide a usage manual for the user.
#  @function
#
help() {
  e-header "deploy HELP";
  e-underline "${black}Usage${reset}";
  printf "${bold}${white}npm run deploy -- [--stage] [--stageTest] [--prod] [--prodTest] ${reset}\n";
  printf "\n\n";
  exit 0;
}



#  sync
#  Provide a usage manual for the user.
#  @function
#
sync() {
  DPLY=("${BUILD_DIRS[@]}" "${BUILD_FILES[@]}")
  for (( i=0; i<"${#DPLY[@]}"; i++ )); do
    STR="${DPLY[$i]}"

    if [[ $STR == *.* ]] ; then
      DIR=$(dirname "${STR}")
      REMOTE_DEST="$REMOTE_ROOT/$DIR"
    else
      REMOTE_DEST="$REMOTE_ROOT/$STR"
    fi

    printf "\n";
    e-task "Deploying $DIR to $ENV...";
    rsync $VARS -e 'ssh -p 2222' --size-only --exclude ".*" --exclude ".*/" $APA_ROOT_LOCAL/$STR $REMOTE_USER@$REMOTE_HOST:$REMOTE_DEST
  done
}

# If the user did not add a flag, send them to help().
if [ -z $1 ]; then
  help
fi


while [[ ! -z $1 ]]; do
  ARG="$1"
  shift
  case "$ARG" in
    --stageTest)
      ENV="Staging"
      VARS="-ahvn"
      REMOTE_USER=$APA_USER_STAGE;
      REMOTE_HOST=$APA_HOST_STAGE;
      REMOTE_ROOT=$APA_ROOT_STAGE;
      sync;
      e-success "Deployment test to $ENV passed.";
      ;;

    --stage)
      ENV="Staging"
      VARS="-ahv"
      REMOTE_USER=$APA_USER_STAGE
      REMOTE_HOST=$APA_HOST_STAGE
      REMOTE_ROOT=$APA_ROOT_STAGE
      sync;
      e-success "Deployed to $ENV";
      ;;

    --prodTest)
      ENV="Production"
      VARS="-ahvn";
      REMOTE_USER=$APA_USER_PROD;
      REMOTE_HOST=$APA_HOST_PROD;
      REMOTE_ROOT=$APA_ROOT_PROD;
      sync;
      e-success "Deployment test to $ENV passed.";
      ;;

    --prod)
      ENV="Production"
      VARS="-ahv";
      REMOTE_USER=$APA_USER_PROD;
      REMOTE_HOST=$APA_HOST_PROD;
      REMOTE_ROOT=$APA_ROOT_PROD;
      sync;
      e-success "Deployed to $ENV";
      ;;
    *)
      help
      ;;
  esac
done
