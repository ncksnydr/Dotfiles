#!/usr/bin/env zsh
# --------------------------------------------------------------------------
#   Deploy
#   Sends files to staging or production server. You will need to set the following
#   variables in a project's .env file.
# --------------------------------------------------------------------------
#   LOCAL_ROOT - Location of project's root directory on local environment.
#   STAGING_USER - SSH user for staging server.
#   STAGING_HOST - SSH host for staging server.
#   STAGING_ROOT - Location of project's root directory on staging server.
#   PROD_USER - SSH user for production server.
#   PROD_HOST - SSH host for production server.
#   PROD_ROOT - Location of project's root directory on production server.
# --------------------------------------------------------------------------


#   Methods
# ------------------------------------------------------------
#  Provide a usage manual for the user.
help() {
  log-header "deploy HELP";
  log-underlined-text "${black}Usage${reset}";
  printf "${bold}${white}npm run deploy -- [--stage] [--stageTest] [--prod] [--prodTest] ${reset}\n";
  printf "\n\n";
  exit 0;
}


#  Provide a usage manual for the user.
sync() {
  DPLY=("${BUILD_DIRS[@]}" "${BUILD_FILES[@]}")
  for (( i=0; i<"${#DPLY[@]}"; i++ )); do
    STR="${DPLY[$i]}"

    if [[ $STR == *.* ]] ; then
      DIR=$(dirname "${STR}")
      REMOTE_DEST="$REMOTE_ROOT/$DIR"
    else
      REMOTE_DEST="$REMOTE_ROOT/$STR"
    fi

    printf "\n";
    log-note "Deploying $DIR to $ENV...";
    rsync $VARS -e 'ssh -p 2222' --size-only --exclude ".*" --exclude ".*/" $LOCAL_ROOT/$STR $REMOTE_USER@$REMOTE_HOST:$REMOTE_DEST
  done
}

# If the user did not add a flag, send them to help().
if [ -z $1 ]; then
  help
fi


while [[ ! -z $1 ]]; do
  ARG="$1"
  shift
  case "$ARG" in
    --stageTest)
      ENV="Staging"
      VARS="-ahvn"
      REMOTE_USER=$STAGING_USER;
      REMOTE_HOST=$STAGING_HOST;
      REMOTE_ROOT=$STAGING_ROOT;
      sync;
      log-success "Deployment test to $ENV passed.";
      ;;

    --stage)
      ENV="Staging"
      VARS="-ahv"
      REMOTE_USER=$STAGING_USER;
      REMOTE_HOST=$STAGING_HOST;
      REMOTE_ROOT=$STAGING_ROOT;
      sync;
      log-success "Deployed to $ENV";
      ;;

    --prodTest)
      ENV="Production"
      VARS="-ahvn";
      REMOTE_USER=$PROD_USER;
      REMOTE_HOST=$PROD_HOST;
      REMOTE_ROOT=$PROD_ROOT;
      sync;
      log-success "Deployment test to $ENV passed.";
      ;;

    --prod)
      ENV="Production"
      VARS="-ahv";
      REMOTE_USER=$PROD_USER;
      REMOTE_HOST=$PROD_HOST;
      REMOTE_ROOT=$PROD_ROOT;
      sync;
      log-success "Deployed to $ENV";
      ;;
    *)
      help
      ;;
  esac
done
